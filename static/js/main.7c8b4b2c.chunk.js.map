{"version":3,"sources":["close.svg","App.js","index.js"],"names":["module","exports","App","useState","count","setCount","data","setData","status","text","setText","fetchingData","a","fetch","then","response","json","replace","className","onClick","onSubmit","e","preventDefault","forhtml","id","type","value","onChange","target","src","close","alt","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,mC,qMCmF5BC,MA9Ef,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,OAGWF,mBAAS,IAHpB,mBAGNG,EAHM,KAGAC,EAHA,OAKWJ,mBAAS,CAAEK,OAAQ,KAAMC,KAAM,OAL1C,mBAKNA,EALM,KAKAC,EALA,KAOPC,EAAY,uCAAG,4BAAAC,EAAA,sEACIC,MAAM,kCAAD,OACQP,EADR,mBACuBF,IACjDU,MAAK,SAACC,GACN,OAAOA,EAASC,UAJC,OACbD,EADa,OAOnBL,EAAQ,CACNF,OAAQO,EAASP,OACjBC,KAAMM,EAASN,KAAKQ,QAAQ,OAAQ,YAEtCZ,EAAS,GAXU,2CAAH,qDAqBlB,OACE,6BAASa,UAAU,kBACjB,6DACET,EAAKA,MACL,yBAAKS,UAAU,eACb,4BAAQC,QAAS,kBAAMZ,EAAQ,aAAaW,UAAU,YAAtD,aAGA,4BACEC,QAAS,kBAAMZ,EAAQ,cACvBW,UAAU,iBAFZ,UASHZ,GACC,0BAAMY,UAAU,aAAaE,SAzBd,SAACC,GACpBA,EAAEC,iBAEFX,IACAJ,EAAQ,MAsBF,2BAAOgB,QAAQ,UAAUjB,GACzB,2BACEkB,GAAG,SACHC,KAAK,SACLC,MAAOtB,EACPuB,SAAU,SAACN,GAAD,OAAOhB,EAASgB,EAAEO,OAAOF,UAGrC,6CAIJ,iCACGjB,EAAKA,MACJ,oCACE,yBACEoB,IAAKC,IACLC,IAAI,MACJb,UAAU,SACVC,QAAS,kBAAMT,EAAQ,CAAEF,OAAQ,KAAMC,KAAM,UAE/C,uBAAGS,UAA2B,UAAhBT,EAAKD,OAAqB,SAAW,SAChDwB,YAAMvB,EAAKA,WCrE1BwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7c8b4b2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.e5ab169f.svg\";","import React, { useState } from 'react'\n\nimport parse from 'html-react-parser'\nimport close from './close.svg'\n\nfunction App() {\n  const [count, setCount] = useState(0)\n\n  const [data, setData] = useState('')\n\n  const [text, setText] = useState({ status: null, text: null })\n\n  const fetchingData = async () => {\n    const response = await fetch(\n      `https://fish-text.ru/get?&type=${data}&number=${count}`\n    ).then((response) => {\n      return response.json()\n    })\n\n    setText({\n      status: response.status,\n      text: response.text.replace(/\\\\n/g, '<br />'),\n    })\n    setCount(0)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    fetchingData()\n    setData('')\n  }\n\n  return (\n    <section className=\"section-center\">\n      <h3>TIRED OF BORING LOREM IPSUM?</h3>\n      {!text.text && (\n        <div className=\"section_btn\">\n          <button onClick={() => setData('sentence')} className=\"btn_list\">\n            Sentences\n          </button>\n          <button\n            onClick={() => setData('paragraph')}\n            className=\"btn_list-last\"\n          >\n            Paras\n          </button>\n        </div>\n      )}\n\n      {data && (\n        <form className=\"lorem-form\" onSubmit={handleSubmit}>\n          <label forhtml=\"number\">{data}</label>\n          <input\n            id=\"number\"\n            type=\"number\"\n            value={count}\n            onChange={(e) => setCount(e.target.value)}\n          />\n\n          <button>GENERATE</button>\n        </form>\n      )}\n\n      <article>\n        {text.text && (\n          <>\n            <img\n              src={close}\n              alt=\"img\"\n              className=\"cancel\"\n              onClick={() => setText({ status: null, text: null })}\n            />\n            <p className={text.status !== 'error' ? 'result' : 'error'}>\n              {parse(text.text)}\n            </p>\n          </>\n        )}\n      </article>\n    </section>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}